{
  "jurisdiction": "United Kingdom",
  "regulatory_authority": {
    "name": "UK Gambling Commission",
    "abbreviation": "UKGC",
    "website": "https://www.gamblingcommission.gov.uk"
  },
  "standard_authority": {
    "name": "International Organization for Standardization",
    "abbreviation": "ISO",
    "standard": "ISO/IEC 27001:2022"
  },
  "document_type": "ISO 27001 Security Requirements - Annex A Control",
  "document_reference": "ISO 27001 Annex A 8.31",
  "last_updated": "2025-10-17",
  "legal_status": "mandatory",
  "applies_to_note": "All gambling operators subject to RTS Chapter 4 - Security Requirements who develop or modify systems",
  "control_category": "Development and Support Controls",
  "control": {
    "control_id": "ISO_27001_A_8.31",
    "control_number": "A 8.31",
    "control_title": "Separation of Development, Test and Production Environments",
    "control_type": "Preventive control",
    "control_purpose": "To protect the production environment and data from compromise by development and test activities through complete segregation of environments",
    "control_objective": "Maintain separate and secured development, test and production environments with appropriate controls, access restrictions and change management procedures"
  },
  "iso_27001_definition": {
    "official_text": "Development, testing and production environments should be separated and secured.",
    "key_requirements": [
      "Separate development environment established",
      "Separate test environment established",
      "Separate production environment established",
      "Each environment has distinct configuration",
      "Access controls enforce segregation",
      "Change management controls prevent unauthorized promotion",
      "No sensitive data in non-production environments",
      "Development tools removed from production",
      "Monitoring and logging in all environments",
      "Segregation of duties enforced",
      "Environment management procedures documented"
    ]
  },
  "control_purpose_detail": {
    "purpose": "Preventive control protecting production systems and data from accidental or intentional compromise through development and testing activities",
    "scope": [
      "Software development activities",
      "System modifications and patches",
      "Infrastructure changes",
      "Configuration updates",
      "Integration testing",
      "Performance testing",
      "Security testing"
    ],
    "key_outcome": "Production environment remains secure and stable while development and testing activities can proceed with reduced risk of production impact"
  },
  "prerequisites": {
    "description": "Before implementing environment separation, foundational requirements must be in place",
    "required_prerequisites": [
      {
        "prerequisite": "Infrastructure and Network Architecture",
        "description": "Network architecture and infrastructure capabilities to support multiple environments",
        "rationale": "Environments require separate network segments and infrastructure",
        "reference": "ISO 27001 A 13.1 - Network security"
      },
      {
        "prerequisite": "Change Management Process",
        "description": "Change management and release management procedures in place",
        "rationale": "Controls promotion between environments",
        "reference": "ISO 27001 A 8.32 - Change management"
      },
      {
        "prerequisite": "Access Control System",
        "description": "Access control mechanisms and identity management",
        "rationale": "Enforces segregation of duty and prevents unauthorized environment access",
        "reference": "ISO 27001 A 5.15 - Access control"
      },
      {
        "prerequisite": "Monitoring and Logging Infrastructure",
        "description": "Logging and monitoring capabilities across systems",
        "rationale": "Monitors environment activity and security incidents",
        "reference": "ISO 27001 A 8.16 - Monitoring activities"
      },
      {
        "prerequisite": "Data Classification and Protection",
        "description": "Data classification and protection procedures",
        "rationale": "Defines what data can be in each environment",
        "reference": "ISO 27001 A 5.12 - Classification of information"
      }
    ]
  },
  "environment_separation_overview": {
    "definition": "Complete logical and physical segregation of development, test and production environments to prevent unintended changes or data exposure",
    "core_principle": "Developers and testers work in isolated environments that cannot affect production systems or data",
    "environments_required": [
      {
        "environment": "Development Environment",
        "purpose": "Where developers write and modify code",
        "characteristics": [
          "Least restricted of all environments",
          "Direct access for authorized developers",
          "Can be modified freely for coding",
          "Development tools present",
          "May contain test or dummy data only",
          "Frequent changes expected"
        ]
      },
      {
        "environment": "Test Environment",
        "purpose": "Where testing occurs before production deployment",
        "characteristics": [
          "Mirrors production configuration",
          "Restricted access for test team",
          "Representative data (masked/anonymized)",
          "Formal change control procedures",
          "Testing tools and monitoring enabled",
          "No live customer data"
        ]
      },
      {
        "environment": "Production Environment",
        "purpose": "Where live systems operate with real customer data",
        "characteristics": [
          "Most restricted and controlled",
          "Highly limited access",
          "No development tools",
          "Formal change management required",
          "Complete monitoring and logging",
          "Secure configuration enforced",
          "Backup and recovery procedures"
        ]
      }
    ],
    "optional_environments": [
      "Staging environment - final pre-production testing",
      "Integration environment - testing system interactions",
      "Performance environment - load and stress testing",
      "Security testing environment - penetration testing and vulnerability scanning",
      "User acceptance testing (UAT) environment"
    ],
    "segregation_principles": [
      "Complete logical segregation through network segmentation",
      "Physical segregation where high security required",
      "No shared resources between environments",
      "Separate data stores with no direct connection",
      "No back-door connections or shortcuts",
      "Formal procedures for promotion between environments",
      "Strong authentication for environment access",
      "Audit logging of all access and changes"
    ]
  },
  "implementation_requirements": [
    {
      "requirement_id": "A_8.31_REQ_1",
      "requirement": "Establish Distinct Development Environment",
      "description": "Create separate development environment where developers can write and modify code without affecting other environments",
      "details": {
        "development_environment_characteristics": [
          "Physically or logically isolated from test and production",
          "Separate hardware or virtual machines",
          "Development tools installed (compilers, editors, debuggers)",
          "Version control system access",
          "Direct developer access with reasonable controls",
          "Test or dummy data only - no production data",
          "Frequent changes allowed for coding",
          "Less restrictive change control than other environments"
        ],
        "development_access_control": [
          "All developers need access",
          "Direct modification by developers allowed",
          "No production data or credentials",
          "Shared development infrastructure acceptable",
          "Personal development machines if appropriate"
        ],
        "development_management": [
          "Version control of all code changes",
          "Regular backup of code repository",
          "Environment consistency among developers",
          "Development standards and practices",
          "Code organization and naming conventions"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_2",
      "requirement": "Establish Distinct Test Environment",
      "description": "Create separate test environment that mirrors production for comprehensive testing before deployment",
      "details": {
        "test_environment_characteristics": [
          "Physically or logically isolated from development and production",
          "Separate hardware or virtual machines",
          "Configuration mirrors production as closely as possible",
          "Same operating systems and versions as production",
          "Same database software and versions",
          "Same security tools and monitoring as production",
          "Similar network architecture to production",
          "Representative data volume for performance testing",
          "Testing tools and monitoring enabled",
          "No live customer data or production credentials"
        ],
        "test_data_requirements": [
          "Data masking or anonymization of any production-like data",
          "Tokenization of sensitive elements",
          "Encryption of test data containing sensitive information",
          "Separate test data management procedures",
          "Documentation of test data sensitivity levels",
          "Controls on test data access"
        ],
        "test_environment_access": [
          "Restricted to test team and authorized personnel",
          "Multi-factor authentication for access",
          "Role-based access control",
          "Audit logging of all access and changes",
          "Regular access reviews"
        ],
        "multiple_test_environments": [
          "Smoke test environment for quick validation",
          "Comprehensive test environment for full testing",
          "Performance test environment with load",
          "Security test environment for penetration testing",
          "Integration test environment for system testing"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_3",
      "requirement": "Establish Distinct Production Environment",
      "description": "Create separate production environment with highest security controls for live systems and customer data",
      "details": {
        "production_environment_characteristics": [
          "Completely isolated from development and test",
          "Separate hardware or virtual machines",
          "Hardened operating systems and configurations",
          "All security patches and updates current",
          "All non-essential services disabled",
          "Development tools and utilities removed",
          "Production monitoring and logging enabled",
          "Backup and disaster recovery implemented",
          "Redundancy and failover capabilities",
          "Physical security controls",
          "Access restricted to operations personnel"
        ],
        "production_data_handling": [
          "Live customer data present",
          "Sensitive payment card data handled securely",
          "Personal information handled per regulations",
          "RNG and game outcome data protected",
          "Data encrypted at rest and in transit",
          "Access controls enforced",
          "Audit logging of all access",
          "Secure backup and recovery"
        ],
        "production_access_control": [
          "Highly restricted access",
          "Multi-factor authentication required",
          "Segregation of duties enforced",
          "Least privilege access",
          "Regular access reviews",
          "Access removal procedures",
          "No shared credentials",
          "Session timeouts enforced"
        ],
        "production_configuration": [
          "Secure baseline configuration",
          "Configuration management documented",
          "Change control procedure required",
          "Configuration audits regular",
          "Vulnerability scanning",
          "Security patch management",
          "Firewall and network security"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_4",
      "requirement": "Implement Network Segregation",
      "description": "Segregate environments using network controls to prevent unauthorized communication",
      "details": {
        "network_segregation_approach": [
          "Separate network segments for each environment",
          "Firewalls between environments",
          "Network access control lists (ACLs)",
          "VLAN segregation if on same physical network",
          "No direct connectivity between environments",
          "Controlled gateways for necessary communication",
          "Monitoring of inter-environment traffic"
        ],
        "network_controls": [
          "Firewall rules restricting traffic",
          "Only necessary ports and protocols allowed",
          "Inbound connections restricted",
          "Outbound connections controlled",
          "VPN for remote access with authentication",
          "Network monitoring and alerting",
          "Intrusion detection systems"
        ],
        "segregation_exceptions": [
          "Planned promotion gateways",
          "Log aggregation from test to monitoring",
          "Required inter-system communications",
          "All with formal approval and monitoring"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_5",
      "requirement": "Implement Data Isolation Controls",
      "description": "Ensure sensitive data is isolated from non-production environments through masking, anonymization and encryption",
      "details": {
        "data_isolation_requirements": [
          "Production data never copied to development",
          "Production data in test only when masked",
          "Personal and sensitive data masked in non-production",
          "Payment card data not present in test",
          "RNG secrets not present in non-production",
          "Customer credentials masked or replaced",
          "Encryption of sensitive test data",
          "Data retention controls in non-production"
        ],
        "data_masking_techniques": [
          "Field masking - replacing real values with fake",
          "Tokenization - replacing sensitive data with tokens",
          "Encryption - encrypting sensitive columns",
          "Hashing - one-way transformation of data",
          "Shuffling - reorganizing data",
          "Pseudonymization - replacing identifiers",
          "Combining multiple techniques for protection"
        ],
        "data_isolation_controls": [
          "Data classification and inventory",
          "Masking rules for each sensitive data element",
          "Validation that masking applied correctly",
          "Database-level access controls",
          "Monitoring of data access in test",
          "Regular audits of data isolation",
          "Controls on data refresh from production"
        ],
        "production_data_refresh": [
          "Formal procedure for updating test data",
          "Approval required before copying",
          "Masking performed before availability to testers",
          "Verification of masking completeness",
          "Secure transfer to test environment"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_6",
      "requirement": "Enforce Change Management Between Environments",
      "description": "Implement formal change management procedures controlling promotion of code and configurations between environments",
      "details": {
        "promotion_process": [
          "Development completed and tested in dev environment",
          "Change request submitted with approval",
          "Code review and approval required",
          "Testing procedures defined and executed",
          "Test environment testing completed and passed",
          "Change control board approval obtained",
          "Production deployment scheduled",
          "Deployment executed by authorized personnel",
          "Post-deployment validation",
          "Monitoring for issues"
        ],
        "change_controls": [
          "Version control tracking all changes",
          "Change documentation and justification",
          "Risk assessment of changes",
          "Testing requirements defined",
          "Rollback procedures planned",
          "Change approval workflow",
          "Deployment authorization",
          "Segregation of duties in approval"
        ],
        "segregation_of_duties": [
          "Developer cannot promote own code to production",
          "Test team cannot approve deployments",
          "Operations cannot bypass change control",
          "No single person can approve and deploy",
          "Multiple approvals for high-risk changes",
          "Audit trail of approvals"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_7",
      "requirement": "Remove Development Tools from Production",
      "description": "Ensure development and testing tools are not present in production environment",
      "details": {
        "tools_to_remove": [
          "Compilers and interpreters",
          "Source code editors and IDEs",
          "Debuggers and profilers",
          "Test frameworks and tools",
          "Version control clients",
          "Build tools and scripts",
          "Administrative utilities",
          "Remote access tools not needed for operations"
        ],
        "production_baseline": [
          "Document minimal software needed for operations",
          "Remove unnecessary software from production build",
          "Regular audits to detect unauthorized tools",
          "Automated scanning for development tools",
          "Controls preventing tool installation"
        ],
        "verification": [
          "Scan production for development tools",
          "Compare against approved software list",
          "Regular verification in security assessments",
          "Automated controls preventing installation"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_8",
      "requirement": "Implement Environment Management Procedures",
      "description": "Establish procedures for managing configurations, patches, updates and access across all environments",
      "details": {
        "configuration_management": [
          "Baseline configurations documented for each environment",
          "Configuration versioning",
          "Change tracking and control",
          "Configuration audits",
          "Regular synchronization between dev and test",
          "Production configuration stability"
        ],
        "patching_and_updates": [
          "Patch management procedure",
          "Testing of patches in test environment first",
          "Approval before production patching",
          "Documented patch schedule",
          "Patch rollback procedures",
          "Validation after patching"
        ],
        "software_inventory": [
          "Inventory of software in each environment",
          "Version tracking for each component",
          "Licensing tracking",
          "Dependency mapping",
          "Regular inventory audits"
        ],
        "infrastructure_management": [
          "Hardware specifications for each environment",
          "Capacity planning",
          "Performance monitoring",
          "Backup procedures",
          "Disaster recovery capability"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_9",
      "requirement": "Implement Monitoring and Logging",
      "description": "Enable comprehensive monitoring and logging in all environments to detect unauthorized activities",
      "details": {
        "monitoring_requirements": [
          "System monitoring in all environments",
          "Performance monitoring",
          "Security monitoring and alerting",
          "Log collection and aggregation",
          "Log analysis and review",
          "Incident detection and response"
        ],
        "logging_in_all_environments": [
          "Access logging - who accessed what and when",
          "Change logging - what changed and by whom",
          "Error and failure logging",
          "Security event logging",
          "Database access logging",
          "Application event logging"
        ],
        "production_monitoring": [
          "Real-time alerting for security events",
          "Performance thresholds monitored",
          "Availability monitoring",
          "Intrusion detection",
          "Regular log review",
          "Monthly security log analysis"
        ],
        "test_environment_monitoring": [
          "Access control monitoring",
          "Configuration change logging",
          "Data access logging",
          "Periodic log review"
        ],
        "development_environment_monitoring": [
          "Code access logging",
          "Periodic security reviews",
          "Code repository monitoring"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_10",
      "requirement": "Establish Authorization and Approval Procedures",
      "description": "Implement formal approval procedures for access and movement between environments",
      "details": {
        "access_approval": [
          "Access requests reviewed and approved",
          "Justification required for access",
          "Segregation of duties in approval",
          "Regular access reviews",
          "Access removal procedures",
          "Audit trail of approvals"
        ],
        "promotion_approval": [
          "Change control board approval",
          "Technical review by appropriate personnel",
          "Risk assessment approval",
          "Quality assurance sign-off",
          "Security team approval if applicable",
          "Multiple approvals for production changes"
        ],
        "delegation_limits": [
          "Appropriate authority levels for approvals",
          "Limits on what can be delegated",
          "Documented delegation procedures",
          "Manager approval for delegation"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_11",
      "requirement": "Implement Backup and Recovery Procedures",
      "description": "Establish backup and recovery procedures for all environments",
      "details": {
        "backup_requirements": [
          "Regular backups of all environments",
          "Backup frequency appropriate to data changes",
          "Off-site backup storage",
          "Backup encryption and protection",
          "Backup integrity verification"
        ],
        "recovery_procedures": [
          "Documented recovery procedures",
          "Recovery time objectives (RTO)",
          "Recovery point objectives (RPO)",
          "Regular recovery testing",
          "Recovery authorization procedures",
          "Post-recovery verification"
        ],
        "production_backup": [
          "Daily backup of production data",
          "Off-site replication",
          "Secure backup storage",
          "Encryption of backups",
          "Regular recovery testing"
        ]
      }
    },
    {
      "requirement_id": "A_8.31_REQ_12",
      "requirement": "Virtualization and Cloud Environment Management",
      "description": "If using virtualization or cloud platforms, implement appropriate controls for managing environments",
      "details": {
        "virtualization_controls": [
          "Hypervisor security and hardening",
          "Virtual machine isolation",
          "Resource allocation controls",
          "Virtual network segregation",
          "Virtual machine snapshot management",
          "Virtual machine migration controls",
          "Monitoring of virtualization platform"
        ],
        "cloud_environment_controls": [
          "Cloud provider security assessment",
          "Account segregation",
          "Identity and access management",
          "Network segregation in cloud",
          "Data encryption controls",
          "Monitoring and logging in cloud",
          "Compliance with cloud provider SLAs"
        ],
        "cost_optimization": [
          "Use of virtualization to reduce hardware costs",
          "Shared infrastructure where appropriate",
          "Automation of environment provisioning",
          "Right-sizing of resources",
          "Cost monitoring and optimization"
        ]
      }
    }
  ],
  "implementation_steps": {
    "steps": [
      {
        "step": 1,
        "action": "Assess current infrastructure and systems",
        "detail": "Understand current systems and environment setup"
      },
      {
        "step": 2,
        "action": "Plan environment architecture",
        "detail": "Design separate environments and network segregation"
      },
      {
        "step": 3,
        "action": "Establish development environment",
        "detail": "Create separate development infrastructure"
      },
      {
        "step": 4,
        "action": "Establish test environment",
        "detail": "Create test environment mirroring production"
      },
      {
        "step": 5,
        "action": "Harden production environment",
        "detail": "Ensure production has highest security controls"
      },
      {
        "step": 6,
        "action": "Implement network segregation",
        "detail": "Separate environments using firewalls and network controls"
      },
      {
        "step": 7,
        "action": "Implement data isolation controls",
        "detail": "Establish data masking and access controls"
      },
      {
        "step": 8,
        "action": "Establish change management process",
        "detail": "Define procedures for promotion between environments"
      },
      {
        "step": 9,
        "action": "Implement monitoring and logging",
        "detail": "Enable logging and monitoring in all environments"
      },
      {
        "step": 10,
        "action": "Document and train",
        "detail": "Document procedures and train personnel"
      }
    ]
  },
  "compliance_checklist": {
    "description": "Steps to comply with ISO 27001 Annex A 8.31",
    "checklist": [
      {
        "item": "Development environment established and documented",
        "status": "required"
      },
      {
        "item": "Test environment established and documented",
        "status": "required"
      },
      {
        "item": "Production environment established and documented",
        "status": "required"
      },
      {
        "item": "Environments physically or logically separated",
        "status": "required"
      },
      {
        "item": "Network segregation implemented",
        "status": "required"
      },
      {
        "item": "Test environment mirrors production configuration",
        "status": "required"
      },
      {
        "item": "Data isolation and masking implemented",
        "status": "required"
      },
      {
        "item": "No production data in non-production environments",
        "status": "required"
      },
      {
        "item": "Development tools removed from production",
        "status": "required"
      },
      {
        "item": "Change management process documented",
        "status": "required"
      },
      {
        "item": "Promotion procedures documented and enforced",
        "status": "required"
      },
      {
        "item": "Segregation of duties implemented",
        "status": "required"
      },
      {
        "item": "Access controls enforced for each environment",
        "status": "required"
      },
      {
        "item": "Monitoring and logging enabled",
        "status": "required"
      },
      {
        "item": "Backup and recovery procedures documented",
        "status": "required"
      },
      {
        "item": "Authorization procedures documented",
        "status": "required"
      },
      {
        "item": "Configuration management procedures in place",
        "status": "required"
      },
      {
        "item": "Regular audits of environment segregation",
        "status": "required"
      }
    ]
  },
  "common_mistakes": {
    "description": "Top 3 mistakes organizations make with environment separation",
    "mistakes": [
      {
        "rank": 1,
        "mistake": "Production data present in test and development environments",
        "description": "Live customer data, payment information, or RNG secrets copied to non-production environments, creating significant data breach risk",
        "root_cause": [
          "Using production database backups for testing",
          "Lack of data masking procedures",
          "Convenience - easier to use real data",
          "Lack of test data management",
          "No controls preventing data copying",
          "Misunderstanding of data sensitivity"
        ],
        "impact": [
          "Unauthorized access to customer data",
          "Exposure of payment card data",
          "Exposure of RNG algorithms or seeds",
          "Data breaches from test systems",
          "Regulatory violations (GDPR, PCI DSS)",
          "Reputational damage",
          "Compliance violations"
        ],
        "prevention": [
          "Formal data masking procedure required",
          "Automated masking on data copy",
          "Encryption of sensitive test data",
          "Access controls on test data",
          "Regular audits of test data",
          "Data classification and inventory",
          "Restrictions on data copying",
          "Monitoring of database access"
        ],
        "requirement": "Production data must never be present in non-production environments without masking"
      },
      {
        "rank": 2,
        "mistake": "Environments not properly segregated - shortcuts and back-doors exist",
        "description": "Environments logically or physically connected allowing changes to propagate or data to be accessed across boundaries",
        "root_cause": [
          "Convenience or legacy connections",
          "Insufficient network segregation",
          "Shared resources between environments",
          "Back-door connections for troubleshooting",
          "Lack of network controls",
          "Cost cutting on infrastructure"
        ],
        "impact": [
          "Accidental changes to production",
          "Test data affecting production",
          "Developer access to production",
          "Security vulnerabilities spread to production",
          "Data breaches through connections",
          "Compliance violations"
        ],
        "prevention": [
          "Complete network segregation with firewalls",
          "No shared storage between environments",
          "No back-door connections",
          "Formal change control for necessary connections",
          "Regular network audits",
          "Monitoring for unauthorized connections",
          "Documentation of all connections"
        ]
      },
      {
        "rank": 3,
        "mistake": "No formal change control between environments",
        "description": "Code or configurations promoted to production without proper testing, approval or documentation",
        "root_cause": [
          "Pressure to deploy quickly",
          "Informal or ad-hoc processes",
          "Lack of change management tool",
          "Insufficient approvals",
          "No testing before deployment",
          "One person can promote changes"
        ],
        "impact": [
          "Untested code deployed to production",
          "Security vulnerabilities in production",
          "System outages and failures",
          "Data corruption or loss",
          "Compliance violations",
          "Audit failures"
        ],
        "prevention": [
          "Formal change management process required",
          "Change control board for approvals",
          "Multiple approvals required",
          "Testing required before deployment",
          "Segregation of duties",
          "Documentation and audit trail",
          "Rollback procedures",
          "Regular testing of procedures"
        ]
      }
    ]
  },
  "audit_requirements": {
    "description": "What auditors will check during ISO 27001 A 8.31 audit",
    "audit_areas": [
      {
        "area": "1. Distinct Environments",
        "description": "Verify separate development, test and production environments exist",
        "checks": [
          "Development environment documented and operational",
          "Test environment documented and operational",
          "Production environment documented and operational",
          "Each environment has distinct configuration",
          "Separate hardware or virtual machines",
          "Network segregation verified"
        ]
      },
      {
        "area": "2. Access Controls",
        "description": "Verify access controls enforce segregation of environments",
        "checks": [
          "Access control procedures documented",
          "Different access levels per environment",
          "Least privilege principle applied",
          "Multi-factor authentication for sensitive environments",
          "Audit logging of access",
          "Regular access reviews"
        ]
      },
      {
        "area": "3. Data Isolation",
        "description": "Verify sensitive data isolated from non-production",
        "checks": [
          "Data masking procedures documented",
          "Masking applied to test data",
          "Verification masking effective",
          "No production data in test or development",
          "Encryption of sensitive test data",
          "Controls on data copying between environments"
        ]
      },
      {
        "area": "4. Configuration Management",
        "description": "Verify configurations managed and segregated",
        "checks": [
          "Configuration baselines documented",
          "Version control for configurations",
          "Test environment mirrors production",
          "Same OS and software versions",
          "Same security tools in test",
          "Configuration audits performed"
        ]
      },
      {
        "area": "5. Change Management",
        "description": "Verify formal procedures for promoting changes",
        "checks": [
          "Change management process documented",
          "Change approval workflow defined",
          "Testing before promotion",
          "Segregation of duties in approvals",
          "Change authorization documented",
          "Rollback procedures in place"
        ]
      },
      {
        "area": "6. Production Hardening",
        "description": "Verify production environment hardened appropriately",
        "checks": [
          "Development tools removed from production",
          "Secure baseline configuration",
          "All security patches applied",
          "Firewall and network security configured",
          "Access restricted to operations personnel",
          "Monitoring and logging enabled"
        ]
      },
      {
        "area": "7. Monitoring and Logging",
        "description": "Verify monitoring and logging enabled appropriately",
        "checks": [
          "Logging enabled in all environments",
          "Log collection and centralization",
          "Security event alerting configured",
          "Regular log review procedures",
          "Audit trail of changes documented",
          "Incident response procedures in place"
        ]
      },
      {
        "area": "8. Backup and Recovery",
        "description": "Verify backup and recovery procedures for all environments",
        "checks": [
          "Regular backup schedule documented",
          "Recovery procedures tested",
          "Recovery time objectives met",
          "Backup integrity verified",
          "Off-site backup storage",
          "Encryption of backups"
        ]
      }
    ]
  },
  "ukgc_application": {
    "critical_systems_context": "For gambling operators, separation of environments is essential to protect RNG integrity, game outcome data, customer information, and regulatory compliance. Mixing development and production environments can result in test code affecting live games or customer data exposure.",
    "specific_requirements": [
      {
        "system": "RNG Systems",
        "environment_requirements": [
          "Complete isolation of RNG systems from development",
          "Production RNG cannot be modified by developers",
          "No development tools in production RNG",
          "No test RNG code in production",
          "Separate RNG in each environment for testing",
          "RNG algorithms and seeds protected from access",
          "Audit trail of all RNG access"
        ]
      },
      {
        "system": "Game Outcome Recording",
        "environment_requirements": [
          "Production outcome data never in test environments",
          "Test outcome data isolated from production",
          "Complete segregation of recording systems",
          "No back-doors between environments",
          "Formal change control for recording logic",
          "Test recording cannot affect production",
          "Audit trails by environment"
        ]
      },
      {
        "system": "Customer Data Systems",
        "environment_requirements": [
          "Production customer data never in test",
          "Data masking mandatory for test data",
          "Encryption of test data containing customer information",
          "Separate customer databases per environment",
          "Access controls enforcing segregation",
          "No sharing of customer data between environments",
          "Monitoring of test data access"
        ]
      },
      {
        "system": "Payment Processing",
        "environment_requirements": [
          "PCI DSS compliance for segregation",
          "Payment test data masked",
          "No production credentials in test",
          "Separate payment gateways per environment",
          "Complete segregation of payment data",
          "Audit logging of all payment environment access"
        ]
      },
      {
        "system": "Regulatory Compliance Systems",
        "environment_requirements": [
          "Production compliance data isolated",
          "No real compliance data in test",
          "Audit trails segregated by environment",
          "Regulatory reporting only from production",
          "Test compliance functionality tested separately"
        ]
      }
    ],
    "environment_segregation_for_gambling": [
      {
        "aspect": "Development Environment",
        "guidance": "Developers must have isolated environment where they cannot affect any production systems or data. Development of RNG, game logic, or customer interfaces occurs here with full freedom to modify code."
      },
      {
        "aspect": "Test Environment",
        "guidance": "Test environment must mirror production exactly, but with masked data and test versions of RNG and game outcomes. Testers validate code works correctly before production deployment."
      },
      {
        "aspect": "Production Environment",
        "guidance": "Production environment is completely locked down with highest security. Only approved code and configurations deployed here. No development tools. Full monitoring and logging. Access restricted to operations personnel."
      },
      {
        "aspect": "Network Segregation",
        "guidance": "Complete network segregation between environments using firewalls. No shortcuts or back-doors. No direct database connections between environments."
      },
      {
        "aspect": "Data Protection",
        "guidance": "All customer data, payment information, and RNG secrets must be masked in non-production. Automated masking on any production data copy."
      }
    ],
    "regulatory_expectations": [
      "Clear documentation of each environment",
      "Evidence of physical or logical segregation",
      "Data masking procedures and evidence",
      "Change control between environments",
      "Access controls and monitoring",
      "No production data in test",
      "No development tools in production",
      "Backup and recovery procedures",
      "Regular audit of segregation"
    ],
    "audit_focus_areas": [
      {
        "area": "RNG Environment Segregation",
        "focus": "Verify RNG completely segregated, test RNG cannot affect production, audit trail of changes"
      },
      {
        "area": "Data Protection",
        "focus": "Verify no production customer data in test, masking effective, encryption of test data"
      },
      {
        "area": "Change Control",
        "focus": "Verify formal procedures for code promotion, segregation of duties, testing before deployment"
      },
      {
        "area": "Access Control",
        "focus": "Verify developers cannot access production, production personnel cannot access development"
      }
    ]
  },
  "compliance_notes": {
    "overall_purpose": "Maintain complete segregation of development, test and production environments to prevent unintended changes and data compromise",
    "enforcement_priority": "Critical - environment segregation is fundamental to protecting production systems and customer data",
    "key_principles": [
      "Separate environments for development, test, and production",
      "Complete network segregation between environments",
      "No production data in non-production environments",
      "Development tools removed from production",
      "Formal change management for promotion",
      "Data isolation and masking in test",
      "Access controls enforcing segregation",
      "Monitoring and logging in all environments",
      "Segregation of duties in approvals",
      "Backup and recovery procedures"
    ]
  },
  "to_pass_the_audit": {
    "description": "To comply with ISO 27001 Annex A 8.31, implement",
    "requirements": [
      {
        "requirement": "Establish separate environments",
        "detail": "Create distinct development, test and production environments"
      },
      {
        "requirement": "Segregate networks",
        "detail": "Use firewalls and network controls to separate environments"
      },
      {
        "requirement": "Implement access controls",
        "detail": "Control who can access each environment"
      },
      {
        "requirement": "Isolate data",
        "detail": "Mask and protect sensitive data in non-production"
      },
      {
        "requirement": "Remove development tools",
        "detail": "Ensure no dev tools in production"
      },
      {
        "requirement": "Establish change control",
        "detail": "Formal procedures for promoting between environments"
      },
      {
        "requirement": "Implement segregation of duties",
        "detail": "Multiple approvals for production changes"
      },
      {
        "requirement": "Enable monitoring and logging",
        "detail": "Log activity in all environments"
      },
      {
        "requirement": "Document procedures",
        "detail": "Procedures for each environment and promotion"
      },
      {
        "requirement": "Implement backup and recovery",
        "detail": "Backup and recovery procedures for all environments"
      },
      {
        "requirement": "Configure production hardening",
        "detail": "Secure baseline, patches, firewall, access control"
      },
      {
        "requirement": "Conduct regular audits",
        "detail": "Audit environment segregation at least annually"
      }
    ]
  },
  "related_requirements": {
    "rts_reference": "RTS Chapter 4 - Security Requirements",
    "related_iso_controls": [
      "ISO 27001 A 5.3 - Segregation of duties",
      "ISO 27001 A 5.12 - Classification of information",
      "ISO 27001 A 5.15 - Access control",
      "ISO 27001 A 8.13 - Information backup",
      "ISO 27001 A 8.16 - Monitoring activities",
      "ISO 27001 A 8.25 - Secure development lifecycle",
      "ISO 27001 A 8.29 - Security testing in development and acceptance",
      "ISO 27001 A 8.32 - Change management",
      "ISO 27001 A 13.1 - Network security"
    ]
  },
  "best_practices": {
    "environment_design": [
      "Plan environment architecture before implementation",
      "Use virtualization for cost efficiency",
      "Ensure test environment mirrors production",
      "Implement complete network segregation",
      "Remove all unnecessary software from production",
      "Apply security hardening to all environments",
      "Document configurations as baselines",
      "Regular configuration audits"
    ],
    "data_management": [
      "Classify all data by sensitivity",
      "Implement automated data masking",
      "Encrypt sensitive test data",
      "Restrict data copying procedures",
      "Monitor data access in test",
      "Regular audits of test data",
      "Secure deletion of test data",
      "Documentation of masking rules"
    ],
    "change_control": [
      "Define clear promotion procedures",
      "Require testing before production",
      "Implement code review process",
      "Multiple approvals for production",
      "Segregation of duties in approvals",
      "Version control for all changes",
      "Rollback procedures documented",
      "Regular testing of procedures"
    ],
    "access_management": [
      "Separate access for each environment",
      "Multi-factor authentication required",
      "Least privilege principles",
      "Regular access reviews",
      "Immediate removal of unnecessary access",
      "Audit logging of access",
      "Periodic access audits",
      "Documentation of access decisions"
    ],
    "monitoring": [
      "Enable logging in all environments",
      "Monitor for unauthorized access",
      "Alert on suspicious activities",
      "Regular log review",
      "Centralized log collection",
      "SIEM for correlation and analysis",
      "Retention of logs for audit"
    ],
    "compliance": [
      "Document all procedures",
      "Evidence of segregation",
      "Data masking validation",
      "Change control records",
      "Access reviews and approvals",
      "Audit findings and remediation",
      "Regular compliance audits"
    ]
  },
  "gambling_operator_specific_guidance": {
    "rng_environment_architecture": [
      {
        "component": "Development RNG",
        "guidance": "Separate RNG implementation used by developers for testing code. Can be modified freely. Contains test algorithm only. No production data."
      },
      {
        "component": "Test RNG",
        "guidance": "RNG used in test environment. Mirrors production RNG implementation. Can be tested but controls prevent deployment to production without approval."
      },
      {
        "component": "Production RNG",
        "guidance": "Live RNG system. Cannot be modified by developers. Complete segregation from development and test. All access logged. Changes only through formal process."
      }
    ],
    "game_system_architecture": [
      {
        "aspect": "Development Systems",
        "guidance": "Developers develop game logic using development database and test RNG. Can freely modify code and test behavior."
      },
      {
        "aspect": "Test Systems",
        "guidance": "Game logic tested with masked game outcome data. Validates correctness before production deployment. Cannot affect production games or outcomes."
      },
      {
        "aspect": "Production Systems",
        "guidance": "Live game systems with real customer data and RNG outcomes. Highly controlled. No test code. Only approved changes deployed."
      }
    ],
    "customer_data_protection": [
      "Production customer data never copied to non-production",
      "All test customer data masked (names, addresses, payment info)",
      "Encryption of test data containing customer information",
      "Access controls limiting test data access",
      "Monitoring of who accesses test data",
      "Regular verification masking effective"
    ],
    "separation_verification": [
      "Network path analysis - verify no direct connections",
      "Database access testing - verify segregation",
      "Access control testing - verify proper separation",
      "Code review - verify no production code in test",
      "Data audit - verify no production data in test",
      "Tool audit - verify no dev tools in production"
    ]
  },
  "document_metadata": {
    "created_date": "2025-10-17",
    "source": "ISO/IEC 27001:2022 Annex A Control 8.31",
    "ukgc_reference": "RTS Chapter 4 - Security Requirements",
    "format": "Structured JSON for MCP integration",
    "version": "1.0",
    "standard_version": "ISO/IEC 27001:2022",
    "file_name": "iso-27001-annex-a-8.31-separation-of-development-test-and-production-environments.json",
    "content_coverage": "Complete - all source document content extracted and structured with comprehensive gambling-specific guidance including RNG environment segregation, game system architecture, customer data protection, and regulatory compliance requirements"
  }
}